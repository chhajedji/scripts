#!/bin/bash

# Pre-requisites: `speedtest'

CYCLES=10

echo $(date) > $HOME/downspeed
echo '' >> $HOME/downspeed

for((i=0;i<$CYCLES;i++));do
    (command -v speedtest >/dev/null && speedtest --no-upload |grep ^Download |tee -a $HOME/downspeed)
done

# Update number of cycles based on results. This might be less than or equal to
# `CYCLES' defined earlier.
CYCLES=$(cat $HOME/downspeed | grep "^Download: [0-9.]\{1,4\}" | wc -l)

# Calculating average download speed.
echo "" >> $HOME/downspeed
echo -n "Average download speed in Mbps for $CYCLES cycle is " >> $HOME/downspeed
echo "scale=2; (($(cat $HOME/downspeed | sed 's/.* \([0-9]*\.[0-9]*\) .*/\1/p' -n | paste -sd '+'))/$CYCLES)" | bc >> $HOME/downspeed



# Follow same procedure used above for upload speed also.


# Give any argument for logging upload speed also.
if [ $# -ne 0 ]; then
    echo $(date) > $HOME/upspeed
    echo '' >> $HOME/upspeed
    for((i=0;i<$CYCLES;i++));do
        command -v speedtest >/dev/null && speedtest --no-download |grep ^Upload |tee -a $HOME/upspeed
    done

# Update number of cycles based on results. This might be less than or equal to
# `CYCLES' defined earlier.
CYCLES=$(cat $HOME/upspeed | grep "^Upload: [0-9.]\{1,4\}" | wc -l)

    echo "" >> $HOME/upspeed
    echo -n "Average upload speed in Mbps for $CYCLES cycle is " >> $HOME/upspeed
    echo "scale=2; (($(cat $HOME/upspeed | sed 's/.* \([0-9]*\.[0-9]*\) .*/\1/p' -n | paste -sd '+'))/$CYCLES)" | bc >> $HOME/upspeed
fi
